/*
 * This file is generated by jOOQ.
 */
package com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.records

import com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.Shop
import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl
import java.time.LocalDateTime

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ShopRecord() : UpdatableRecordImpl<ShopRecord>(Shop.SHOP) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var address1: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var address2: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var city: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var countryCode: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open var customerEmail: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var currency: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var domain: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var email: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var name: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var phone: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var province: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    open var shopOwner: String?
        set(value): Unit = set(13, value)
        get(): String? = get(13) as String?

    open var timezone: String?
        set(value): Unit = set(14, value)
        get(): String? = get(14) as String?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(15, value)
        get(): LocalDateTime? = get(15) as LocalDateTime?

    open var zip: String?
        set(value): Unit = set(16, value)
        get(): String? = get(16) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised ShopRecord
     */
    constructor(
        id: Long? = null,
        address1: String? = null,
        address2: String? = null,
        city: String? = null,
        countryCode: String? = null,
        createdAt: LocalDateTime? = null,
        customerEmail: String? = null,
        currency: String? = null,
        domain: String? = null,
        email: String? = null,
        name: String? = null,
        phone: String? = null,
        province: String? = null,
        shopOwner: String? = null,
        timezone: String? = null,
        updatedAt: LocalDateTime? = null,
        zip: String? = null
    ) : this() {
        this.id = id
        this.address1 = address1
        this.address2 = address2
        this.city = city
        this.countryCode = countryCode
        this.createdAt = createdAt
        this.customerEmail = customerEmail
        this.currency = currency
        this.domain = domain
        this.email = email
        this.name = name
        this.phone = phone
        this.province = province
        this.shopOwner = shopOwner
        this.timezone = timezone
        this.updatedAt = updatedAt
        this.zip = zip
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised ShopRecord
     */
    constructor(value: com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.pojos.Shop?) : this() {
        if (value != null) {
            this.id = value.id
            this.address1 = value.address1
            this.address2 = value.address2
            this.city = value.city
            this.countryCode = value.countryCode
            this.createdAt = value.createdAt
            this.customerEmail = value.customerEmail
            this.currency = value.currency
            this.domain = value.domain
            this.email = value.email
            this.name = value.name
            this.phone = value.phone
            this.province = value.province
            this.shopOwner = value.shopOwner
            this.timezone = value.timezone
            this.updatedAt = value.updatedAt
            this.zip = value.zip
            resetChangedOnNotNull()
        }
    }
}
