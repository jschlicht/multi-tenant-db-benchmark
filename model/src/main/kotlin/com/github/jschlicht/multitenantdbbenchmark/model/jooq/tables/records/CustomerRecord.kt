/*
 * This file is generated by jOOQ.
 */
package com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.records

import com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.Customer
import org.jooq.Record2
import org.jooq.impl.UpdatableRecordImpl
import java.time.LocalDateTime

/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class CustomerRecord() : UpdatableRecordImpl<CustomerRecord>(Customer.CUSTOMER) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var shopId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var email: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var firstName: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var lastName: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(5, value)
        get(): LocalDateTime? = get(5) as LocalDateTime?

    open var updatedAt: LocalDateTime?
        set(value): Unit = set(6, value)
        get(): LocalDateTime? = get(6) as LocalDateTime?

    open var zip: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Long?, Long?> = super.key() as Record2<Long?, Long?>

    /**
     * Create a detached, initialised CustomerRecord
     */
    constructor(
        id: Long? = null,
        shopId: Long? = null,
        email: String? = null,
        firstName: String? = null,
        lastName: String? = null,
        createdAt: LocalDateTime? = null,
        updatedAt: LocalDateTime? = null,
        zip: String? = null
    ) : this() {
        this.id = id
        this.shopId = shopId
        this.email = email
        this.firstName = firstName
        this.lastName = lastName
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        this.zip = zip
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    constructor(value: com.github.jschlicht.multitenantdbbenchmark.model.jooq.tables.pojos.Customer?) : this() {
        if (value != null) {
            this.id = value.id
            this.shopId = value.shopId
            this.email = value.email
            this.firstName = value.firstName
            this.lastName = value.lastName
            this.createdAt = value.createdAt
            this.updatedAt = value.updatedAt
            this.zip = value.zip
            resetChangedOnNotNull()
        }
    }
}
